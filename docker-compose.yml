services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vacation_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: vacation_management_dev
      POSTGRES_USER: vacation_user
      POSTGRES_PASSWORD: vacation_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U vacation_user -d vacation_management_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vacation_net

  client:
    build:
      context: ./client
      dockerfile: DockerFile
    container_name: vacation_client
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      server:
        condition: service_healthy
    networks:
      - vacation_net

  server:
    build:
      context: ./server
      dockerfile: DockerFile
    container_name: vacation_server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://vacation_user:vacation_pass@postgres:5432/vacation_management_dev
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - vacation_net

  adminer:
    image: adminer
    container_name: vacation_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - vacation_net

volumes:
  postgres_data:
    driver: local

networks:
  vacation_net:
    driver: bridge
